
#include <iostream>
#include <ctime>
const int N = 20;

using namespace std;

void vv(int *A);
void print(int *A);
void copy(int *A, int *B);
void select(int A[]);

int main() {
	int A[N], B[N];
	vv(A);
	print(A);
	copy(A, B);
	select(B);
	print(B);
	return 0;
}

void vv(int A[]) {
	int i;
	srand(time(NULL));
	for (i = 0; i < N; i++) {
		A[i] = rand() % 51;
	}
}

void print(int A[]) {
	int i;
	for (i = 0; i < N; i++) cout << A[i] << " ";
	cout << "\n";
}

void copy(int A[], int B[]) {
	for (int i = 0; i < N; i++) {
		B[i] = A[i];
	}
}

void select(int B[]) {
	int i, j, ind, temp;
	for (i = 0; i < N - 1; i++) {
		ind = i;
		for (j = i + 1; j < N; j++)
			if (B[j] < B[ind]) ind = j;
		temp = B[ind];
		B[ind] = B[i];
		B[i] = temp;
	}
}

void bubble(int B[]){
	int i, j, buf;
	for(i = 0; i< N-1; i++){
		for(j = N-1; j>i; j--){
			if(B[j-1]>B[j]){
				buf=B[j];
				B[j]=B[j-1];
				B[j-1]=buf;
			}		
		}	
	}
}

void bubble_new(int B[]){
    int i=0, j, buf, m, c=0, p=0;
    do{m=i;
        for (j=N-1; j>m;j--){
            c++;
            if (B[j-1]>B[j]){
                i=j;
                p++;
                buf=B[j];
                B[j]=B[j-1];
                B[j-1]=buf;
            }
        }
    printf("Bubble Modern\n");
    printf("Compare:%d\n", c);
    printf("Reshuffle: %d\n", p);
    } while (i-m);
}


void Shaker(B[]){
    int i, buf, n1=0, n2=N-1, j, c=0, p=0;
    do{
        for(i=n2; i>n1;i--){
            c++;
            if(B[i-1]>B[i]){
                p++;
                j=i;
                buf=B[i-1];
                B[i-1]=B[i];
                B[i]=buf;
            }
            n1=j;
        }
        for(i=n1; i<=n2;i++){
            c++;
            if(B[i-1]>B[i]){
                p++;
                j=i;
                buf=B[i-1];
                B[i-1]=B[i];
                B[i]=buf;
            }
            n2=j-1;
        }
    }while(n1<n2)
}